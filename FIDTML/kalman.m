clear all;
A=[1 0;0 (1-2e-6)^(2/3600)];
Q=[9 0;0 (0.045e-6)^2];
C=[2*(0.1e-6)^2 0 0;0 2*(0.1e-6)^2 0;0 0 4*(10e-6)^2];
S=zeros(2,200);
shat=zeros(2,1);
s=zeros(2,1);
M=[9 0;0 (0.045e-6)^2];
K=zeros(2,3);
Mhat=zeros(2,2);
spre=zeros(2,200);shatpre=zeros(2,200);spre(1,1)=200;spre(2,1)=...
    1+20e-6;shatpre(1,1)=200;shatpre(2,1)=1+20e-6;
s=[200;1+20e-6];S(1,1)=200;S(2,1)=1+20e-6;shat=[200;1+20e-6];

%输出实际值
for j=2:1:200
    S(:,j)=A*S(:,j-1)+[3*randn;(0.045e-6)*randn];
end
S_=zeros(2,1);S_=A*S(:,200)+[3*randn;(0.045e-6)*randn];

%时间戳和频偏辅助值仿真
F=zeros(2,201);
for i=1:200
    F(1,i)=S(1,i)/(3e8)+(1/S(2,i)-1)+0.0000001*randn;
    F(2,i)=S(1,i)/(3e8)-(1/S(2,i)-1)+0.0000001*randn;
end
  F(1,201)=S_(1,1)/(3e8)+(1/S_(2,1)-1)+0.0000001*randn;
  F(2,201)=S_(1,1)/(3e8)-(1/S_(2,1)-1)+0.0000001*randn;
T=zeros(4,201);
T(1,1)=0;
for i=1:200
T(2,i)=S(2,i)*(T(1,i)+1e-3+(S(1,i)*(T(1,i)-T(1,1)))/(3e8-S(1,i))+...
    10e-6*randn);
T(3,i)=T(2,i)+0.2e-3;
T(4,i)=T(3,i)/S(2,i)+1e-3+(S(1,i)*(T(3,i)-T(2,1)))/(3e8*S(2,i))+...
    10e-6*randn;
T(1,i+1)=T(1,i)+2;
end
T(2,201)=S_(2,1)*(T(1,201)+1e-3+(S_(1,1)*(T(1,201)-T(1,1)))/(3e8...
    -S_(1,1))+10e-6*randn);
T(3,201)=T(2,201)+0.2e-3;
T(4,201)=T(3,201)/S_(2,1)+1e-3+(S_(1,1)*(T(3,201)-T(2,1)))/(3e8*...
    S_(2,1))+10e-6*randn;

%kalman 滤波
for i=2:1:200
    shat=A*s;
    Mhat=A*M*A'+Q;
    Pi=[2/(3e8) -2/(shat(2,1)^2);2/(3e8) 2/(shat(2,1)^2);(1/(3e8*...
        shat(2,1)))*(T(3,i)-T(3,i-1))+(shat(1,1)/(3e8-shat(1,1))^2)...
        *(T(1,i)-T(1,i-1)) (-1/(shat(2,1)^2))*(T(3,i)-T(2,i)-T(3,i-1)...
        +T(2,i-1))-(shat(1,1)/(3e8*(shat(2,1)^2)))*(T(3,i)-T(3,i-1))];
    K=Mhat*Pi'/(C+Pi*Mhat*Pi');
    x=[F(1,i-1)+F(1,i);F(2,i-1)+F(2,i);T(4,i)-T(1,i)-T(4,i-1)+T(1,i-1)];
    p=[2*shat(1,1)/3e8+2/shat(2,1)-2;2*shat(1,1)/3e8-2/shat(2,1)+...
        2;(1/shat(2,1))*(T(3,i)-T(2,i)-T(3,i-1)+T(2,i-1))+(shat(1,1)...
        /(3e8*shat(2,1)))*(T(3,i)-T(3,i-1))+(shat(1,1)/(3e8-shat(1,1)))...
        *(T(1,i)-T(1,i-1))];
    s=shat+K*(x-p);
    M=([1 0;0 1]-K*Pi)*Mhat;
    spre(1,i)=s(1,1);spre(2,i)=s(2,1);shatpre(1,i)=shat(1,1);
    shatpre(2,i)=shat(2,1);
end

%FI-DTML估计值仿真
N=200;
B=zeros(2*N,2);
thegema_f=0.04e-6;
for k=1:2:2*N-1
    B(k,1)=1;
    B(k,2)=1;
    B(k+1,1)=1;
    B(k+1,2)=-1;
end
f=zeros(2*N,1);
for i=1:2:2*N-1
    f(i,1)=F(1,(i+1)/2)+1;
    f(i+1)=F(2,(i+1)/2)-1;
end
guji=zeros(2,200);
for i=1:200
    theta=inv(B(1:2,:)'*B(1:2,:))*B(1:2,:)'*f(2*i-1:2*i,:);
    guji(1,i)=3e8*theta(1,1);
    guji(2,i)=1/theta(2,1);
end

%输出滤波前后对比图
   m=0:2:398;
   figure
   plot(m,spre(2,:),'r*-',m,S(2,:),'gd-',m,guji(2,:),'b<-');
   legend('频偏预测值','频偏实际值','频偏估计值')
   xlabel('时间（s）');ylabel('频率偏移');title('频率偏移的追踪性能')
   grid on
   figure
   plot(m,spre(1,:),'r*-',m,S(1,:),'gd-',m,guji(1,:),'b<-')
   legend('速度预测值','速度实际值','速度估计值')
   xlabel('时间（s）');ylabel('相对速度');title('相对速度追踪性能');
   grid on
